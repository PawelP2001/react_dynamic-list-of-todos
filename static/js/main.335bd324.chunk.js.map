{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedFilter","input","setTask","task","updatedTodos","inputValue","filter","todo","lowerCaseTitle","title","toLowerCase","isActiveAndCompleted","completed","isCompletedAndNotCompleted","includes","filteredTodos","className","map","todoIsSelect","id","classNames","type","onClick","handleSelectTodo","TodoFilter","setSelectedFilter","setInput","onChange","e","target","value","placeholder","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","Loader","TodoModal","useState","isLoading","setIsLoading","user","setUser","fetchUser","useCallback","a","fetchedUser","useEffect","href","email","name","App","setTodos","loading","setLoading","finally","length","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.335bd324.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype TodoListProps = {\n  todos: Todo[];\n  selectedFilter: string;\n  input: string;\n  setTask: (todo: Todo) => void;\n  task?: Todo;\n};\n\nfunction filteredTodos(\n  todos: Todo[],\n  selectedFilter: string,\n  inputValue: string,\n): Todo[] {\n  return todos.filter((todo) => {\n    const lowerCaseTitle = todo.title.toLowerCase();\n\n    const isActiveAndCompleted\n      = selectedFilter === 'active' && todo.completed;\n    const isCompletedAndNotCompleted\n      = selectedFilter === 'completed' && !todo.completed;\n\n    if (isActiveAndCompleted || isCompletedAndNotCompleted) {\n      return false;\n    }\n\n    return !(inputValue && !lowerCaseTitle.includes(inputValue.toLowerCase()));\n  });\n}\n\nfunction handleSelectTodo(setTask: (todo: Todo) => void, todo: Todo) {\n  setTask(todo);\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  selectedFilter,\n  input,\n  setTask,\n  task,\n}) => {\n  const updatedTodos = filteredTodos(todos, selectedFilter, input);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {updatedTodos.map((todo) => {\n          const todoIsSelect = todo.id === task?.id;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classNames({\n                'has-background-info-light': todoIsSelect,\n              })}\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              {todo.completed ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td className=\"is-vcentered\" />\n              )}\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-success': todo.completed,\n                    'has-text-danger': !todo.completed,\n                  })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  title=\"Select todo\"\n                  onClick={() => handleSelectTodo(setTask, todo)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={classNames({\n                        'far fa-eye-slash': todoIsSelect,\n                        'far fa-eye': !todoIsSelect,\n                      })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype TodoFilterProps = {\n  setSelectedFilter: (filter: string) => void;\n  input: string;\n  setInput: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<TodoFilterProps> = ({\n  setSelectedFilter,\n  input,\n  setInput,\n}) => {\n  const handleFilterChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedFilter(e.target.value);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInput(e.target.value);\n  };\n\n  const handleClearSearch = () => {\n    setInput('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            title=\"Select your option\"\n            onChange={handleFilterChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={input}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {input && (\n          <span className=\"icon is-right\">\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearSearch}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\n\ntype TodoModalProps = {\n  task: Todo,\n  setTask: () => void,\n};\n\nexport const TodoModal: React.FC<TodoModalProps> = ({\n  task,\n  setTask,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState<User>();\n\n  const fetchUser = useCallback(async (userId: number) => {\n    setIsLoading(true);\n\n    if (userId) {\n      try {\n        const fetchedUser = await getUser(userId);\n\n        setUser(fetchedUser);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (task) {\n      fetchUser(task.userId);\n    }\n  }, [task, fetchUser]);\n\n  const getTodoStatus = () => {\n    if (task.completed) {\n      return (\n        <strong className=\"has-text-success\">Done</strong>\n      );\n    }\n\n    return (\n      <strong className=\"has-text-danger\">Planned</strong>\n    );\n  };\n\n  const handleModalClose = () => {\n    setTask();\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && (\n        <Loader />\n      )}\n\n      {!isLoading && task && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${task.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              title=\"close icon\"\n              onClick={handleModalClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {task.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {getTodoStatus()}\n              {' '}\n              by\n              {' '}\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedFilter, setSelectedFilter] = useState('all');\n  const [input, setInput] = useState('');\n  const [task, setTask] = useState<Todo>();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setSelectedFilter={setSelectedFilter}\n                input={input}\n                setInput={setInput}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n\n              {!loading && todos.length > 0 && (\n                <TodoList\n                  todos={todos}\n                  selectedFilter={selectedFilter}\n                  input={input}\n                  setTask={setTask}\n                  task={task}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {task && (\n        <TodoModal\n          task={task}\n          setTask={() => setTask(undefined)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}